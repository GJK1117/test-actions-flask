name: CI/CD for Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    labels: ubuntu-server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
          echo "export DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from version.txt
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t gon0519/test-github-actions:${{ env.VERSION }} .
          docker push gon0519/test-github-actions:${{ env.VERSION }}

      - name: Deploy new Docker container
        run: |
          CONTAINER_NAME=flask_app
          IMAGE_NAME=gon0519/test-github-actions:${{ env.VERSION }}

          # Stop and remove the existing container if it exists
          if [ $(docker ps -a -q -f name=$CONTAINER_NAME) ]; then
            docker rm -f $CONTAINER_NAME
          fi

          # Run the new container
          docker run -d --name $CONTAINER_NAME -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -p 10001:5000 --restart always $IMAGE_NAME
